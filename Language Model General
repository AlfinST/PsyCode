//Grammar for defining XML intermediate representation

<main> </main> - represents the main body of program
------
<function>   </function> - represents function
//within function
<function_name> </function_name>
<return_type></return_type>
<parameter>
   <type>   </type>
   <name>   </name>
</parameter>
<body>  </body>

-----
<initalize>
   <name> </name>
   <type> </type>

</initalize>
----
<assignment>
   <op1> </op1>
   <op2> </op1>
</assignment>

-------
//Looping situations
<repeat>
 <for-each>
   <item> </item>
   <list> </list>
 </for-each>

 <while> 
   <condition> 
     <op1> </op1>
        <op2> </op2>
        <op> </op>
     </condition>
    <body>
    </body>
</while>

<do> 
 <body>
 </body>
 <while>
 <condition> 
     <op1> </op1>
        <op2> </op2>
        <op> </op>
     </condition>
  </while>
</do>
</repeat>
-------
// case

<switch> 
  <case>
     //condition or variable or constant
     <body>
      
     </body>
  </case>
  ..

  <case>
    <default>
     <body>
     </body>
    </body>
</case>
</switch>
-----
<array>
   <type>  </type>
   <name>  </name>
   <size>  </size>
</array>

<linked_list>
  
</linked_list>
//array implementation
<stack>
  <type> </type>
  <name> </name>
 </stack> 
</stack>

<queue>
 <type> </type>
  <name> </name>
 <type> </type>
  <name> </name>

</queue>


<open_bracket>

<close_bracket>
----
<location>
  <variable>
    <name> </name>
    <type> </type>
    <value> </value>
  </variable>
  <constant>
      <name> </name>
    <type> </type>
    <value> </value>
  </constant>
</location>   


---------
<expression>
  <location> </location>
  <operator> </operator>
  <location> </location>
</expression>
------


 <expression> </expression>
  <operator> <operator>
 <expression> </expression>

-----
<pointer> 
  <name> </name>
  <order> </order>  //before and after 
</pointer>
-----------

<file>
  <name> </name>
  <mode> </mode> // r,w,a,r+,w+,a+
</file>

<file_write>
  <char></char>
  <file_pointer> </file_pointer>
</file_write>

<file_close>
</file_close>


<file_read>
  <file_pointer> </file_pointer>
</file_read>

<break> </break>
<continue> </continue>


<structure>

</structure>

<union>

</union>

<enum>

</enum>

<enum_var> <name> </name> </enum_var>


-----
<exit>

</exit>
---
<abort>

</abort>
----
<string>



</string>
----

<power_func> </power_func>


---

<keywords>
//C and C++
<auto></auto>
   <else></else>	
   <long></long>	
   <switch> </switch>
   <break> </break>
   <enum> </enum>
   <register> </register>
   <typedef> </typedef>
   <case> </case>
   <extern> </extern>
   <return> </return>
   <union> </union>
   <char> </char>
   <float> </float>
   <short> </short>
   <unsigned> </unsigned>
   <const> </const>
   <for>
   
  <init> 
    <name> </name>
    <type> </type>
    <value> <value>
  </init>
  <terminate> 
     <condition> 
        <op1> </op1>
        <op2> </op2>
        <op> </op>
     </condition>
    </terminate>
    <iter>
          <name> </name>
          <op> </op>
          <val> </val>
    </iter>
    <body>
    
    </body>
    </for>

   <signed> </signed>
   <void> </void>
   <continue> </continue>
   <goto> </goto>
   <sizeof> </sizeof>
   <volatile> </volatile>
   <default> </default>

   <if>
   <condition>
     <condition> 
     <op1> </op1>
        <op2> </op2>
        <op> </op>
     </condition>
     <body>

     </body>
    </if>
   
   <static> </static>
   <while> </while>
   <do> </do>
   <int> </int>
   <struct> </struct>
   <double> </double>
   ----
   //Java
   <abstract> </abstract>
   <assert> </assert>
   <boolean> </boolean>
   <byte> </byte>
   <catch> </catch>
   <class> </class>
   <enum> </enum>
   <extends> </extends>
   <final> </final>
   <import> </import>
   <finally> </finally>
   <implements> </implements>
   <instanceof> </instanceof>
   <interface> </interface>
   <long> </long>
   <native> </native>
   <package> </package>
   <private> </private>
   <protected> </protected>
   <public></public>
   <short> </short>
   <static> </static>
   <super> </super>
   <synchronized> </synchronized>
   <this> </this>
   <throws> </throws>
   <transient> </transient>
   <try> </try>
   <volatile> </volatile>
-----
//Python
  <exec> </exec>
  <not> </not>
  <finally> </finally>
  <or> </or>
  <and></and>
  <break> </break>
  <pass></pass>
  <continue> </continue>
  <global> </global>
  <raise> </raise>
  <def> </def>
  <del> </del>

  <elif>
  <condition>
     <condition> 
     <op1> </op1>
        <op2> </op2>
        <op> </op>
     </condition>
     <body>

     </body>
   </elif>

  <in> </in>
  <is> </is>
  <except> </except>
  <lambda> </lambda>
  <yield> </yield>

</keywords>

